services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: packages/core/api/Dockerfile
    volumes:
      - ./packages/core/api:/app/packages/core/api
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
      nats:
        condition: service_started
    env_file:
      - ./packages/core/api/.development.env
    ports:
      - "3001:3001"
    networks:
      - my-network
  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: packages/core/user-service/Dockerfile
    volumes:
      - ./packages/core/user-service:/app/packages/core/user-service
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
      nats:
        condition: service_started
    env_file:
      - ./packages/core/user-service/.development.env
    ports:
      - "3002:3002"
    networks:
      - my-network
  auth-service:
    container_name: auth-service
    build:
      context: .
      dockerfile: packages/core/auth-service/Dockerfile
    volumes:
      - ./packages/core/auth-service:/app/packages/core/auth-service
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
      nats:
        condition: service_started
    env_file:
      - ./packages/core/auth-service/.development.env
    ports:
      - "3004:3004"
    networks:
      - my-network
  chat-service:
    container_name: chat-service
    build:
      context: .
      dockerfile: packages/core/chat-service/Dockerfile
    volumes:
      - ./packages/core/chat-service:/app/packages/core/chat-service
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
      nats:
        condition: service_started
    env_file:
      - ./packages/core/chat-service/.development.env
    ports:
      - "3004:3004"
    networks:
      - my-network    
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: packages/core/frontend/Dockerfile
    volumes:
      - ./packages/core/frontend:/app/packages/core/frontend
      - /app/node_modules
    ports:
      - "3000:3000"
    env_file:
      - ./packages/core/frontend/.development.env
    depends_on:
      - api
    networks:
      - my-network
  mysql:
    container_name: mysql
    image: mysql:8.0
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - ./packages/core/dbs/my-sql/.development.env
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - my-network
  nats:
    container_name: nats
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - my-network      

networks:
  my-network:

volumes:
  mysql_data:
